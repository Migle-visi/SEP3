// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rides.proto

package via.sep3.databaseserver.protobuff;

public interface RideMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:RideMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 id = 1;</code>
   * @return The id.
   */
  int getId();

  /**
   * <code>.LocationMessage startLocation = 2;</code>
   * @return Whether the startLocation field is set.
   */
  boolean hasStartLocation();
  /**
   * <code>.LocationMessage startLocation = 2;</code>
   * @return The startLocation.
   */
  via.sep3.databaseserver.protobuff.LocationMessage getStartLocation();
  /**
   * <code>.LocationMessage startLocation = 2;</code>
   */
  via.sep3.databaseserver.protobuff.LocationMessageOrBuilder getStartLocationOrBuilder();

  /**
   * <code>.LocationMessage destination = 3;</code>
   * @return Whether the destination field is set.
   */
  boolean hasDestination();
  /**
   * <code>.LocationMessage destination = 3;</code>
   * @return The destination.
   */
  via.sep3.databaseserver.protobuff.LocationMessage getDestination();
  /**
   * <code>.LocationMessage destination = 3;</code>
   */
  via.sep3.databaseserver.protobuff.LocationMessageOrBuilder getDestinationOrBuilder();

  /**
   * <code>int64 startDate = 4;</code>
   * @return The startDate.
   */
  long getStartDate();

  /**
   * <code>.DriverMessage driver = 5;</code>
   * @return Whether the driver field is set.
   */
  boolean hasDriver();
  /**
   * <code>.DriverMessage driver = 5;</code>
   * @return The driver.
   */
  via.sep3.databaseserver.protobuff.DriverMessage getDriver();
  /**
   * <code>.DriverMessage driver = 5;</code>
   */
  via.sep3.databaseserver.protobuff.DriverMessageOrBuilder getDriverOrBuilder();

  /**
   * <code>int32 capacity = 6;</code>
   * @return The capacity.
   */
  int getCapacity();

  /**
   * <code>bool isCancelled = 7;</code>
   * @return The isCancelled.
   */
  boolean getIsCancelled();
}
